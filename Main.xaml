<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1104,1019.2" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="25">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="17">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This Sequential Process performs String Manipulation Operations like Startswith , Endswith and Equals based upon the input received from the user&#xD;&#xA;" DisplayName="StringManipulationActivities" sap:VirtualizedContainerService.HintSize="538.4,779.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="choice" />
      <Variable x:TypeArguments="x:String" Name="Estr1" />
      <Variable x:TypeArguments="x:String" Name="Enstr_1" />
      <Variable x:TypeArguments="x:String" Name="Sstr_1" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InputDialog Options="{x:Null}" sap2010:Annotation.AnnotationText="Used to Obtain the Choice of Operation from the user&#xD;&#xA;" DisplayName="Choice of StringMainpulation Operation" sap:VirtualizedContainerService.HintSize="496.8,339.2" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Choose one of the below mentioned operations" OptionsString="EQUALS;ENDSWITH;STARTSWITH" Title="Choose the String Manipulation Operation">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[choice]</OutArgument>
      </ui:InputDialog.Result>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InputDialog>
    <Switch x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Performs the Only Choosen String Manipulation Operation which is choosen by the user during runtime&#xD;&#xA;" DisplayName="Performing String Manipulation Operation based on Switch Case" Expression="[choice]" sap:VirtualizedContainerService.HintSize="496.8,247.2" sap2010:WorkflowViewState.IdRef="Switch`1_2">
      <Switch.Default>
        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_9" Text="[&quot;Something Went Wrong ! Kindly Choose the Appropriate Action !&quot;]" />
      </Switch.Default>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence x:Key="EQUALS" sap2010:Annotation.AnnotationText="Receieves two Inputs From the user then it was validated using equals method to produce the output" DisplayName="Sequence for Validating Equals Operation" sap:VirtualizedContainerService.HintSize="752.8,100" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="Estr2" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" sap:VirtualizedContainerService.HintSize="711.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="Input the first string" Title="First Input For Equals">
          <ui:InputDialog.Result>
            <OutArgument x:TypeArguments="x:String">[Estr1]</OutArgument>
          </ui:InputDialog.Result>
        </ui:InputDialog>
        <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="711.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_3" IsPassword="False" Label="Input the first string" Title="Second Input For Equals">
          <ui:InputDialog.Result>
            <OutArgument x:TypeArguments="x:String">[Estr2]</OutArgument>
          </ui:InputDialog.Result>
        </ui:InputDialog>
        <If Condition="[Estr1.Equals(Estr2)]" sap:VirtualizedContainerService.HintSize="711.2,209.6" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;Both Input strings are equal !!&quot;]" />
          </If.Then>
          <If.Else>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[&quot;Both input strings are not equal &quot;]" />
          </If.Else>
        </If>
      </Sequence>
      <Sequence x:Key="ENDSWITH" sap2010:Annotation.AnnotationText="Receives two input from the user and then it was validated using endswith operation&#xD;&#xA;" DisplayName="Sequence for Validating Endswith operation" sap:VirtualizedContainerService.HintSize="752.8,100" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="Enstr_2" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" sap:VirtualizedContainerService.HintSize="711.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_4" IsPassword="False" Label="Input String For Endswith Operation" Title="First Input For Endswith operation">
          <ui:InputDialog.Result>
            <OutArgument x:TypeArguments="x:String">[Enstr_1]</OutArgument>
          </ui:InputDialog.Result>
        </ui:InputDialog>
        <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="711.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_5" IsPassword="False" Label="A String or Character to verify the input string" Title="Second Input For Endswith Operation">
          <ui:InputDialog.Result>
            <OutArgument x:TypeArguments="x:String">[Enstr_2]</OutArgument>
          </ui:InputDialog.Result>
        </ui:InputDialog>
        <If Condition="[Enstr_1.EndsWith(Enstr_2)]" sap:VirtualizedContainerService.HintSize="711.2,209.6" sap2010:WorkflowViewState.IdRef="If_2">
          <If.Then>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="[&quot;The Input String Endswith the Specified Input&quot;]" />
          </If.Then>
          <If.Else>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_6" Text="[&quot;The Input String does not Endswith the Specified Input&quot;]" />
          </If.Else>
        </If>
      </Sequence>
      <Sequence x:Key="STARTSWITH" sap2010:Annotation.AnnotationText="Receives two inputs from the user and validated using startswith method&#xD;&#xA;" DisplayName="Sequence for validating Startswith Operation" sap:VirtualizedContainerService.HintSize="752.8,100" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="Sstr_2" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" sap:VirtualizedContainerService.HintSize="711.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_6" IsPassword="False" Label="Input the String for Startswith" Title="First Input for Startswith">
          <ui:InputDialog.Result>
            <OutArgument x:TypeArguments="x:String">[Sstr_1]</OutArgument>
          </ui:InputDialog.Result>
        </ui:InputDialog>
        <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="711.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_7" IsPassword="False" Label="Input the character/String to validate the input string" Title="StartsWith Character">
          <ui:InputDialog.Result>
            <OutArgument x:TypeArguments="x:String">[Sstr_2]</OutArgument>
          </ui:InputDialog.Result>
        </ui:InputDialog>
        <If Condition="[Sstr_1.StartsWith(Sstr_2)]" sap:VirtualizedContainerService.HintSize="711.2,209.6" sap2010:WorkflowViewState.IdRef="If_3">
          <If.Then>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_7" Text="[&quot;The Input String Startswith the Specified Input Character&quot;]" />
          </If.Then>
          <If.Else>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_8" Text="[&quot;The Input String does not Startswith the Specified Input Character&quot;]" />
          </If.Else>
        </If>
      </Sequence>
    </Switch>
  </Sequence>
</Activity>